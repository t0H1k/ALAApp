//
//  DataStore.swift
//  ALAApp
//
//  Created by Айтолкун Анарбекова on 26/10/22.
//


class DataStore {
    
    let chapter = [
        "Глава 13",
        "Глава 14",
        "Глава 15"
    ]
    
    let subChapter = [
        [
            "13.1 to be continued",
            "13.2 to be continued",
            "13.3 to be continued"
        ],
        [
            "14.1 Метод map(_:)",
            "14.2 Метод mapValues(_:)",
            "14.3 Метод flatMap(_:)",
            "14.4 Метод compactMap(_:)",
            "14.5 Метод filter(_:)",
            "14.6 Метод reduce(_:_:)",
            "14.7 Метод zip(_:_:)",
            "14.8 Оператор guard для опционалов",
            "14.9 Оператор отложенных действий defer"
        ],
        [
            "15.1 to be continued",
            "15.2 to be continued",
            "15.3 to be continued",
            "15.4 to be continued"
        ]
    ]
    
    let content = [
        [
            "13.1 to be continued",
            "13.2 to be continued",
            "13.3 to be continued"
        ],
        [
            "14.1 Метод map(_:) позволяет применить переданное в него замыкание для каждого элемента коллекции. В результате его выполнения возвращается новая последовательность, тип элементов которой может отличаться от типа исходных элементов.",
            "14.2 Метод mapValues(_:) позволяет обработать значения каждого элемента словаря, при этом ключи элементов останутся в исходном состоянии.",
            "14.3 Метод flatMap(_:) отличается от map(_:) тем, что всегда возвращает плоский одно- мерный массив. Так, пример, приведенный в листинге 14.4, но с использованием flatMap(_:), вернет одномерный массив.",
            "14.4 Метод compactMap(_:) позволяет произвести те же действия, что и map(_:), разница лишь в реакции на ситуацию, когда преобразование не может быть произведено.",
            "14.5 Метод filter(_:) используется, когда требуется отфильтровать элементы коллекции по определенному правилу.",
            "14.6 Метод reduce(_:_:) позволяет объединить все элементы коллекции в одно значение в соответствии с переданным замыканием. Помимо самих элементов метод принимает первоначальное значение, которое служит для выполнения операции с первым элементом коллекции.",
            "14.7 Функция zip(_:_:) предназначена для формирования последовательности пар значений, каждая из которых составлена из элементов двух базовых последовательностей. Другими словами, если у вас есть две последовательности и вам нужно попарно брать их элементы, группировать и складывать в новую последовательность, то эта функция как раз то, что нужно. Сначала вы берете первые элементы каждой последовательности, группируете их, потом берете вторые элементы, и т. д.",
            "14.8 Оператор guard проверяет, возможно ли провести операцию опционального связывания, и в случае отрицательного результата выполняет код тела оператора, где с помощью return досрочно завершается работа функции. Если опциональное связывание успешно завершается, то тело guard игнорируется и выполняет следующий за ним код.",
            "14.9 Оператор defer откладывает выполнение определенного в его теле кода до момента выхода из области видимости, в которой он был использован (например, после окончания выполнения функции)."
        ],
        [
            "15.1 to be continued",
            "15.2 to be continued",
            "15.3 to be continued",
            "15.4 to be continued"
        ]
    ]
}

